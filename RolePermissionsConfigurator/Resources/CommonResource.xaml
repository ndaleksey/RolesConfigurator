<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:properties="clr-namespace:Swsu.Lignis.RolePermissionsConfigurator.Properties"
					xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
					xmlns:converters="clr-namespace:Swsu.Lignis.RolePermissionsConfigurator.Converters"
					xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
					xmlns:infr="clr-namespace:Swsu.Lignis.RolePermissionsConfigurator.Infrastructure">

	<converters:YesNoBoolValueConverter x:Key="YesNoBoolValueConverter"/>

	<Style x:Key="IconButtonStyle" TargetType="{x:Type Control}">
		<Style.Triggers>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Foreground" Value="Gray"/>
			</Trigger>
		</Style.Triggers>
		<Style.Setters>
			<Setter Property="Foreground" Value="Black"/>
			<Setter Property="HorizontalContentAlignment" Value="Center"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="Width" Value="26"/>
			<Setter Property="Height" Value="26"/>
			<Setter Property="Margin" Value="2"/>
			<Setter Property="Padding" Value="1"/>
		</Style.Setters>
	</Style>

	<Style TargetType="{x:Type infr:IconButton}" BasedOn="{StaticResource IconButtonStyle}"/>

	<Style TargetType="{x:Type infr:Icon}">
		<Style.Resources>
			<Style TargetType="Viewbox">
				<Setter Property="Stretch" Value="Uniform"/>
			</Style>
			<Style TargetType="Path">
				<Setter Property="Stroke" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ButtonBase}, Path=Background}" />
				<Setter Property="Fill" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ButtonBase}, Path=Foreground}" />
				<!--				<Setter Property="Opacity" Value="0.8"/>-->
			</Style>
		</Style.Resources>
	</Style>

	<Style x:Key="RoleSettingsWindowStyle" TargetType="dx:DXDialogWindow">
		<Setter Property="Icon" Value="/Resources/Images/main_icon.ico"/>
		<Setter Property="Width" Value="600"/>
		<Setter Property="Height" Value="650"/>
		<Setter Property="ShowInTaskbar" Value="False"/>
		<Setter Property="ResizeMode" Value="NoResize"/>
		<Setter Property="WindowStyle" Value="SingleBorderWindow"/>
	</Style>
	
	<Style TargetType="ToolBar">
		<Style.Triggers>
			<DataTrigger Binding="{Binding Path=TabIndex}" Value="2">
				<DataTrigger.Setters>
					<Setter Property="Visibility" Value="Hidden"/>
				</DataTrigger.Setters>
			</DataTrigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="FlagIconStyle" TargetType="Image">
		<Style.Triggers>
			<DataTrigger Binding="{Binding Path=CultureName}" Value="ru-RU">
				<DataTrigger.Setters>
					<Setter Property="Source" Value="./Images/flag_russia.ico"/>
				</DataTrigger.Setters>
			</DataTrigger>

			<DataTrigger Binding="{Binding Path=CultureName}" Value="fr-FR">
				<DataTrigger.Setters>
					<Setter Property="Source" Value="./Images/flag_france.ico"/>
				</DataTrigger.Setters>
			</DataTrigger>
		</Style.Triggers>
	</Style>
	
	<Style TargetType="Expander">
		<Style.Triggers>
			<DataTrigger Binding="{Binding Path=Permissions.Count}" Value="0">
				<DataTrigger.Setters>
					<Setter Property="IsEnabled" Value="False"/>
				</DataTrigger.Setters>
			</DataTrigger>
		</Style.Triggers>
	</Style>

	<Style TargetType="ListBoxItem">
		<Setter Property="HorizontalAlignment" Value="Stretch"/>
		<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
		<Setter Property="VerticalAlignment" Value="Stretch"/>
		<Setter Property="VerticalContentAlignment" Value="Stretch"/>
		<Style.Triggers>
			<DataTrigger Binding="{Binding Path=Permissions.Count}" Value="0">
				<DataTrigger.Setters>
					<Setter Property="Visibility" Value="Collapsed"/>
				</DataTrigger.Setters>
			</DataTrigger>
		</Style.Triggers>
	</Style>

	<Style TargetType="ListViewItem">
		<Style.Triggers>
			<DataTrigger Binding="{Binding Path=IsEnabled}" Value="False">
				<DataTrigger.Setters>
					<Setter Property="IsEnabled" Value="False"/>
					<!--					<Setter Property="Visibility" Value="Collapsed"/>-->
				</DataTrigger.Setters>
			</DataTrigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="PluginSelectionStatusCheckBoxStyle" TargetType="CheckBox">
		<Style.Triggers>
			<DataTrigger Binding="{Binding Path=PluginSelectionStatus}" Value="{x:Null}">
				<DataTrigger.Setters>
					<Setter Property="Content" Value="{x:Static properties:Resources.DeselectAll}"/>
				</DataTrigger.Setters>
			</DataTrigger>
			<DataTrigger Binding="{Binding Path=PluginSelectionStatus}" Value="True">
				<DataTrigger.Setters>
					<Setter Property="Content" Value="{x:Static properties:Resources.DeselectAll}"/>
				</DataTrigger.Setters>
			</DataTrigger>
			<DataTrigger Binding="{Binding Path=PluginSelectionStatus}" Value="False">
				<DataTrigger.Setters>
					<Setter Property="Content" Value="{x:Static properties:Resources.SelectAll}"/>
				</DataTrigger.Setters>
			</DataTrigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="SubsystemSelectionStatusCheckBoxStyle" TargetType="CheckBox">
		<Style.Triggers>
			<DataTrigger Binding="{Binding Path=SubsystemSelectionStatus}" Value="{x:Null}">
				<DataTrigger.Setters>
					<Setter Property="Content" Value="{x:Static properties:Resources.DeselectAll}"/>
				</DataTrigger.Setters>
			</DataTrigger>
			<DataTrigger Binding="{Binding Path=SubsystemSelectionStatus}" Value="True">
				<DataTrigger.Setters>
					<Setter Property="Content" Value="{x:Static properties:Resources.DeselectAll}"/>
				</DataTrigger.Setters>
			</DataTrigger>
			<DataTrigger Binding="{Binding Path=SubsystemSelectionStatus}" Value="False">
				<DataTrigger.Setters>
					<Setter Property="Content" Value="{x:Static properties:Resources.SelectAll}"/>
				</DataTrigger.Setters>
			</DataTrigger>
		</Style.Triggers>
	</Style>

	<Style TargetType="DataGrid">
		<Setter Property="GridLinesVisibility" Value="None"/>
		<Setter Property="AlternatingRowBackground" Value="WhiteSmoke"/>
		<Setter Property="HorizontalAlignment" Value="Stretch"/>
		<Setter Property="VerticalAlignment" Value="Stretch"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="AutoGenerateColumns" Value="False"/>
		<Setter Property="CanUserResizeRows" Value="False"/>
		<Setter Property="SelectionMode" Value="Single"/>
	</Style>

	<Style TargetType="DataGridColumnHeader">
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
	</Style>

	<Style x:Key="DataGridTextBoxStyle" TargetType="TextBox" >
		<Setter Property="SelectionBrush" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="Transparent"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Background" Value="Transparent"/>
	</Style>

	<Style x:Key="DataGridTextBoxWithEventsStyle" TargetType="TextBox" BasedOn="{StaticResource DataGridTextBoxStyle}">
		<Style.Triggers>
			<DataTrigger Binding="{Binding Path=HasDuplicate}" Value="True" >
				<DataTrigger.Setters>
					<Setter Property="BorderBrush" Value="Red"/>
				</DataTrigger.Setters>
			</DataTrigger>

			<DataTrigger Binding="{Binding Path=IsExistedInDb}" Value="False" >
				<DataTrigger.Setters>
					<Setter Property="FontStyle" Value="Italic"/>
				</DataTrigger.Setters>
			</DataTrigger>

			<DataTrigger Binding="{Binding Path=IsEdited}" Value="True" >
				<DataTrigger.Setters>
					<Setter Property="FontStyle" Value="Italic"/>
				</DataTrigger.Setters>
			</DataTrigger>

			<DataTrigger Binding="{Binding IsDeleted}" Value="True" >
				<DataTrigger.Setters>
					<Setter Property="Foreground" Value="Gray"/>
					<Setter Property="IsReadOnly" Value="True"/>
				</DataTrigger.Setters>
			</DataTrigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="ClusterTextEditStyle" TargetType="dxe:TextEdit">
		<Style.Triggers>
			<DataTrigger Binding="{Binding Path=RowData.Row.HasCluster}" Value="false">
				<DataTrigger.Setters>
					<Setter Property="IsEnabled" Value="False"/>
				</DataTrigger.Setters>
			</DataTrigger>
		</Style.Triggers>
	</Style>
</ResourceDictionary>